.. Copyright 2020 University of Maryland and other Hatchet Project
   Developers. See the top-level LICENSE file for details.

   SPDX-License-Identifier: MIT

Simple Examples
===============

Hatchet can read in a variety of data file formats into a GraphFrame. Below, we
show examples of reading in different data formats.

Read in an HPCToolkit database
------------------------------

A database directory is generated by using ``hpcprof-mpi`` to post-process the
raw measurements directory output by `HPCToolkit
<http://hpctoolkit.org/index.html>`_. To analyze an HPCToolkit database, the
``from_hpctoolkit`` method can be used.

.. literalinclude:: examples/hpctoolkit.py
    :language: python

Read in a Caliper cali file
---------------------------

`Caliper <http://software.llnl.gov/Caliper/>`_'s default raw performance data
output is the `cali <http://llnl.github.io/Caliper/OutputFormats.html#cali>`_.
The cali format can be read by ``cali-query``, which transforms the raw data into
JSON format.

.. literalinclude:: examples/simple/caliper_cali.py
    :language: python

Read in a Caliper JSON stream or file
-------------------------------------

`Caliper <http://software.llnl.gov/Caliper/>`_'s `json-split
<http://software.llnl.gov/Caliper/OutputFormats.html#json-split>`_ format
writes a JSON file with separate fields for Caliper records and metadata. The
json-split format is generated by either running ``cali-query`` on the raw
Caliper data or by enabling the ``mpireport`` service when using Caliper.

JSON Stream
~~~~~~~~~~~

.. literalinclude:: examples/simple/caliper_cali_to_json.py
    :language: python

JSON File
~~~~~~~~~

.. literalinclude:: examples/simple/caliper_json.py
    :language: python

Read in a DOT file
------------------

The `DOT <https://www.graphviz.org/doc/info/lang.html>`_ file format is
generated by using ``gprof2dot`` on ``gprof`` or ``callgrind`` output.

.. literalinclude:: examples/simple/gprof_dot.py
    :language: python

Read in a DAG literal
---------------------

The literal format is a list of dictionaries representing a graph with nodes
and metrics.

.. literalinclude:: examples/simple/dag_literal.py
    :language: python
